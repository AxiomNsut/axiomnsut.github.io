---
import Layout from "../layouts/Layout.astro";
import BlogCard from "../components/BlogCard.astro";

// get all blog posts, filter out drafts, and sort by pubDate
const blogPosts = (await Astro.glob("./posts/*.{md,mdx}"))
  .filter((post) => !post.frontmatter.draft)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).valueOf() -
      new Date(a.frontmatter.pubDate).valueOf()
  );

// alphabetical tags with the count of posts with that tag
const tagCounts = blogPosts
  .map((post) => post.frontmatter.tags)
  .flat()
  .reduce((acc, tag) => {
    if (acc[tag]) {
      acc[tag] += 1;
    } else {
      acc[tag] = 1;
    }
    return acc;
  }, {});
---

<Layout
  title="Axiom | All posts"
  description="Axiom's blog posts. It's all about Philosophy."
>
  <main
    class="max-w-3xl md:mx-auto lg:max-w-5xl xl:max-w-6xl ' } text-gray-900 antialiased"
  >
    <div class="text-md md:text-lg my-4 font-serif">
      <div class="grid grid-cols-3 gap-y-4 gap-x-10 w-full text-center">
        {
          tagCounts &&
            Object.keys(tagCounts).map((tag) => (
              <a
                href={`/tags/${tag}`}
                class="hover:underline decoration-emerald-500"
              >
                {tag}({tagCounts[tag]})
              </a>
            ))
        }
      </div>
    </div>

    <div class="flex flex-col justify-center items-center space-y-6">
      {
        blogPosts.map((post) => (
          <BlogCard
            title={post.frontmatter.title}
            description={post.frontmatter.description}
            pubDate={post.frontmatter.pubDate}
            readTime={post.frontmatter.minutesRead}
            link={post.frontmatter.slug || post.url}
            image={post.frontmatter.image}
            tags={post.frontmatter.tags}
          />
        ))
      }
    </div>
  </main>
</Layout>
